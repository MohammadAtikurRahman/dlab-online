{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadinterval.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadInterval() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert(\"Please select a CSV file to upload.\");\n      return;\n    }\n    Papa.parse(selectedFile, {\n      header: true,\n      // Treats the first row of the CSV as headers\n      skipEmptyLines: true,\n      complete: function (results) {\n        const transformedData = results.data.map(item => ({\n          eiin: parseInt(item[\"EIIN\"]),\n          schoolname: item[\"School Name\"],\n          labnum: parseInt(item[\"Lab Number\"]),\n          pcnum: parseInt(item[\"PC Number\"]),\n          starttime: item[\"Session Start Time\"],\n          lasttime: item[\"Last Checked Time\"],\n          totaltime: parseDuration(item[\"Total Time\"])\n        }));\n        sendDataToServer(transformedData);\n      }\n    });\n  };\n  const parseDuration = duration => {\n    // Converts duration from 'HH Oh MMm SSs' to total seconds\n    const parts = duration.match(/(\\d+)\\sOh\\s(\\d+)m\\s(\\d+)s/);\n    if (parts) {\n      return parseInt(parts[1]) * 3600 + parseInt(parts[2]) * 60 + parseInt(parts[3]);\n    }\n    return 0;\n  };\n  const sendDataToServer = data => {\n    axios.post('http://localhost:4300/inter-info', data).then(response => {\n      alert('Interval data uploaded successfully!');\n      console.log(response.data);\n    }).catch(error => {\n      alert('Failed to upload interval data: ' + error.message);\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: handleFileChange,\n        accept: \".csv\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpload,\n        children: \"Upload Interval Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadInterval, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadInterval;\nexport default UploadInterval;\nvar _c;\n$RefreshReg$(_c, \"UploadInterval\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","UploadInterval","_s","selectedFile","setSelectedFile","handleFileChange","e","target","files","handleUpload","alert","parse","header","skipEmptyLines","complete","results","transformedData","data","map","item","eiin","parseInt","schoolname","labnum","pcnum","starttime","lasttime","totaltime","parseDuration","sendDataToServer","duration","parts","match","post","then","response","console","log","catch","error","message","className","children","type","onChange","accept","multiple","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadinterval.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nfunction UploadInterval() {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (!selectedFile) {\r\n            alert(\"Please select a CSV file to upload.\");\r\n            return;\r\n        }\r\n\r\n        Papa.parse(selectedFile, {\r\n            header: true, // Treats the first row of the CSV as headers\r\n            skipEmptyLines: true,\r\n            complete: function(results) {\r\n                const transformedData = results.data.map(item => ({\r\n                    eiin: parseInt(item[\"EIIN\"]),\r\n                    schoolname: item[\"School Name\"],\r\n                    labnum: parseInt(item[\"Lab Number\"]),\r\n                    pcnum: parseInt(item[\"PC Number\"]),\r\n                    starttime: item[\"Session Start Time\"],\r\n                    lasttime: item[\"Last Checked Time\"],\r\n\r\n                    totaltime: parseDuration(item[\"Total Time\"]),\r\n                }));\r\n                sendDataToServer(transformedData);\r\n            }\r\n        });\r\n    };\r\n\r\n    const parseDuration = (duration) => {\r\n        // Converts duration from 'HH Oh MMm SSs' to total seconds\r\n        const parts = duration.match(/(\\d+)\\sOh\\s(\\d+)m\\s(\\d+)s/);\r\n        if (parts) {\r\n            return parseInt(parts[1]) * 3600 + parseInt(parts[2]) * 60 + parseInt(parts[3]);\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    const sendDataToServer = (data) => {\r\n        axios.post('http://localhost:4300/inter-info', data)\r\n            .then(response => {\r\n                alert('Interval data uploaded successfully!');\r\n                console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to upload interval data: ' + error.message);\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"file\" className=\"form-control\" onChange={handleFileChange} accept=\".csv\"  multiple/>\r\n                <button className=\"btn btn-primary\" onClick={handleUpload}>Upload Interval Data</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadInterval;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}