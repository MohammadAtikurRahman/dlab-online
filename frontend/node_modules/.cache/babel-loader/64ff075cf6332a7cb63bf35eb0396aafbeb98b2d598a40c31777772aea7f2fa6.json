{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import Fuse from 'fuse.js';\n// import './index.css';\n\n// function SchoolwiseInterval() {\n//     const [intervalData, setIntervalData] = useState([]);\n//     const [selectedIntervals, setSelectedIntervals] = useState(null);\n//     const [query, setQuery] = useState('');\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const response = await fetch('http://localhost:4300/get-interval');\n//                 if (response.ok) {\n//                     const data = await response.json();\n//                     setIntervalData(data);\n//                 } else {\n//                     throw new Error('Network response was not ok.');\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching data: ', error);\n//             }\n//         };\n\n//         fetchData();\n//     }, []);\n\n//     const fuse = new Fuse(intervalData, {\n//         keys: ['schoolname', 'eiin'],\n//         includeScore: true\n//     });\n\n//     const handleSearch = (pattern) => {\n//         setQuery(pattern);\n//         const results = fuse.search(pattern);\n//         const matches = results.map(result => result.item);\n//         setSelectedIntervals(matches);\n//     };\n\n//     return (\n//         <div className=\"container mt-5\">\n//             <input\n//                 type=\"text\"\n//                 className=\"form-control mb-3\"\n//                 placeholder=\"Search by school name or EIIN...\"\n//                 value={query}\n//                 onChange={(e) => handleSearch(e.target.value)}\n//             />\n\n//             <ul className=\"list-group\">\n//                 {Array.from(new Set(intervalData.map(item => `${item.schoolname} (EIIN: ${item.eiin})`))).map((school, index) => (\n//                     <li key={index} className=\"list-group-item list-group-item-action list-group-item-primary\" onClick={() => handleSearch(school)}>\n//                         {school}\n//                     </li>\n//                 ))}\n//             </ul>\n\n//             {selectedIntervals && selectedIntervals.length > 0 && (\n//                 <div className=\"mt-4\">\n//                     <table className=\"table table-striped\">\n//                         <thead>\n//                             <tr>\n//                                 <th>#</th>\n//                                 <th>School Name</th>\n//                                 <th>PC Name</th>\n//                                 <th>Start Time</th>\n//                                 <th>Last Time</th>\n//                                 <th>Total Time (s)</th>\n//                                 <th>Lab Number</th>\n//                                 <th>PC Number</th>\n//                                 <th>EIIN</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {selectedIntervals.map((item, index) => (\n//                                 <tr key={index}>\n//                                     <td>{index + 1}</td>\n//                                     <td>{item.schoolname}</td>\n//                                     <td>{item.pcname}</td>\n//                                     <td>{item.starttime}</td>\n//                                     <td>{item.lasttime}</td>\n//                                     <td>{item.totaltime}</td>\n//                                     <td>{item.labnum}</td>\n//                                     <td>{item.pcnum}</td>\n//                                     <td>{item.eiin}</td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default SchoolwiseInterval;","map":{"version":3,"names":[],"sources":["D:/MONGODB-online/frontend/src/schoolwiseinterval.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Fuse from 'fuse.js';\r\n// import './index.css';\r\n\r\n// function SchoolwiseInterval() {\r\n//     const [intervalData, setIntervalData] = useState([]);\r\n//     const [selectedIntervals, setSelectedIntervals] = useState(null);\r\n//     const [query, setQuery] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 const response = await fetch('http://localhost:4300/get-interval');\r\n//                 if (response.ok) {\r\n//                     const data = await response.json();\r\n//                     setIntervalData(data);\r\n//                 } else {\r\n//                     throw new Error('Network response was not ok.');\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching data: ', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     const fuse = new Fuse(intervalData, {\r\n//         keys: ['schoolname', 'eiin'],\r\n//         includeScore: true\r\n//     });\r\n\r\n//     const handleSearch = (pattern) => {\r\n//         setQuery(pattern);\r\n//         const results = fuse.search(pattern);\r\n//         const matches = results.map(result => result.item);\r\n//         setSelectedIntervals(matches);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container mt-5\">\r\n//             <input\r\n//                 type=\"text\"\r\n//                 className=\"form-control mb-3\"\r\n//                 placeholder=\"Search by school name or EIIN...\"\r\n//                 value={query}\r\n//                 onChange={(e) => handleSearch(e.target.value)}\r\n//             />\r\n\r\n//             <ul className=\"list-group\">\r\n//                 {Array.from(new Set(intervalData.map(item => `${item.schoolname} (EIIN: ${item.eiin})`))).map((school, index) => (\r\n//                     <li key={index} className=\"list-group-item list-group-item-action list-group-item-primary\" onClick={() => handleSearch(school)}>\r\n//                         {school}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n\r\n//             {selectedIntervals && selectedIntervals.length > 0 && (\r\n//                 <div className=\"mt-4\">\r\n//                     <table className=\"table table-striped\">\r\n//                         <thead>\r\n//                             <tr>\r\n//                                 <th>#</th>\r\n//                                 <th>School Name</th>\r\n//                                 <th>PC Name</th>\r\n//                                 <th>Start Time</th>\r\n//                                 <th>Last Time</th>\r\n//                                 <th>Total Time (s)</th>\r\n//                                 <th>Lab Number</th>\r\n//                                 <th>PC Number</th>\r\n//                                 <th>EIIN</th>\r\n//                             </tr>\r\n//                         </thead>\r\n//                         <tbody>\r\n//                             {selectedIntervals.map((item, index) => (\r\n//                                 <tr key={index}>\r\n//                                     <td>{index + 1}</td>\r\n//                                     <td>{item.schoolname}</td>\r\n//                                     <td>{item.pcname}</td>\r\n//                                     <td>{item.starttime}</td>\r\n//                                     <td>{item.lasttime}</td>\r\n//                                     <td>{item.totaltime}</td>\r\n//                                     <td>{item.labnum}</td>\r\n//                                     <td>{item.pcnum}</td>\r\n//                                     <td>{item.eiin}</td>\r\n//                                 </tr>\r\n//                             ))}\r\n//                         </tbody>\r\n//                     </table>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SchoolwiseInterval;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}