{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadpc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPC() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedData, setUploadedData] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files);\n  };\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select one or more CSV files to upload.\");\n      return;\n    }\n    const formData = new FormData();\n    Array.from(selectedFiles).forEach(file => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const response = await axios.post('http://localhost:4300/pc-info', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Upload successful:\", response.data);\n      alert(\"Upload successful!\");\n\n      // Set uploaded data for display\n      setUploadedData(response.data);\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"An error occurred while uploading. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        id: \"inputGroupFile04\",\n        \"aria-describedby\": \"inputGroupFileAddon04\",\n        \"aria-label\": \"Upload\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        type: \"button\",\n        id: \"inputGroupFileAddon04\",\n        onClick: handleUpload,\n        children: \"UPLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), uploadedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(uploadedData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPC, \"ImVSBi0HoWUC0zBXO47Ng/NiZ3M=\");\n_c = UploadPC;\nexport default UploadPC;\nvar _c;\n$RefreshReg$(_c, \"UploadPC\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPC","_s","selectedFiles","setSelectedFiles","uploadedData","setUploadedData","handleFileChange","e","target","files","handleUpload","length","alert","formData","FormData","Array","from","forEach","file","append","response","post","headers","console","log","data","error","children","className","type","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadpc.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UploadPC() {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const [uploadedData, setUploadedData] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFiles(e.target.files);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert(\"Please select one or more CSV files to upload.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        Array.from(selectedFiles).forEach((file) => {\r\n            formData.append(\"files\", file);\r\n        });\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:4300/pc-info', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            console.log(\"Upload successful:\", response.data);\r\n            alert(\"Upload successful!\");\r\n\r\n            // Set uploaded data for display\r\n            setUploadedData(response.data);\r\n        } catch (error) {\r\n            console.error(\"Upload error:\", error);\r\n            alert(\"An error occurred while uploading. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile04\"\r\n                    aria-describedby=\"inputGroupFileAddon04\"\r\n                    aria-label=\"Upload\"\r\n                    onChange={handleFileChange}\r\n                />\r\n                <button className=\"btn btn-danger\" type=\"button\" id=\"inputGroupFileAddon04\" onClick={handleUpload}>\r\n                    UPLOAD\r\n                </button>\r\n            </div>\r\n\r\n            {uploadedData && (\r\n                <div>\r\n                    <h2>Uploaded Data</h2>\r\n                    <pre>{JSON.stringify(uploadedData, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadPC;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}