{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadpc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPC() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedData, setUploadedData] = useState(null);\n  const [showData, setShowData] = useState(false);\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files);\n  };\n  const handleUpload = () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select one or more CSV files to upload.\");\n      return;\n    }\n    Array.from(selectedFiles).forEach(file => {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: async results => {\n          const formattedData = results.data.map(item => ({\n            pcname: item[\"PC Name\"],\n            eiin: parseInt(item.EIIN),\n            schoolname: item[\"School Name\"],\n            labnum: parseInt(item.Lab),\n            pcnum: parseInt(item.PC),\n            starttime: `${item[\"Start Date\"]} ${item[\"Start Time\"]}`,\n            totaltime: parseInt(item.Duration),\n            lasttime: `${item[\"End Date\"]} ${item[\"End Time\"]}` // Correct calculation of lasttime\n          }));\n          try {\n            const response = await axios.post('http://localhost:4300/pc-info-csv', formattedData, {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            });\n            console.log(\"Upload successful:\", response.data);\n            alert(\"Upload successful!\");\n            setUploadedData(response.data);\n            setShowData(true);\n          } catch (error) {\n            console.error(\"Upload error:\", error.response ? error.response.data : 'Server error');\n            alert(\"An error occurred while uploading. Please try again.\");\n          }\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \".csv\",\n        className: \"form-control\",\n        id: \"inputGroupFile04\",\n        \"aria-describedby\": \"inputGroupFileAddon04\",\n        \"aria-label\": \"Upload\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"button\",\n        id: \"inputGroupFileAddon04\",\n        onClick: handleUpload,\n        children: \"Upload CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), showData && uploadedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Uploaded Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(uploadedData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPC, \"ZNhcjWhejB+xyNarjoLijWQQOEw=\");\n_c = UploadPC;\nexport default UploadPC;\nvar _c;\n$RefreshReg$(_c, \"UploadPC\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","UploadPC","_s","selectedFiles","setSelectedFiles","uploadedData","setUploadedData","showData","setShowData","handleFileChange","e","target","files","handleUpload","length","alert","Array","from","forEach","file","parse","header","skipEmptyLines","complete","results","formattedData","data","map","item","pcname","eiin","parseInt","EIIN","schoolname","labnum","Lab","pcnum","PC","starttime","totaltime","Duration","lasttime","response","post","headers","console","log","error","children","className","type","multiple","accept","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadpc.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nfunction UploadPC() {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const [uploadedData, setUploadedData] = useState(null);\r\n    const [showData, setShowData] = useState(false);\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFiles(e.target.files);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert(\"Please select one or more CSV files to upload.\");\r\n            return;\r\n        }\r\n\r\n        Array.from(selectedFiles).forEach(file => {\r\n            Papa.parse(file, {\r\n                header: true,\r\n                skipEmptyLines: true,\r\n                complete: async (results) => {\r\n                    const formattedData = results.data.map(item => ({\r\n                        pcname: item[\"PC Name\"],\r\n                        eiin: parseInt(item.EIIN),\r\n                        schoolname: item[\"School Name\"],\r\n                        labnum: parseInt(item.Lab),\r\n                        pcnum: parseInt(item.PC),\r\n                        starttime: `${item[\"Start Date\"]} ${item[\"Start Time\"]}`,\r\n                        totaltime: parseInt(item.Duration),\r\n                        lasttime: `${item[\"End Date\"]} ${item[\"End Time\"]}`, // Correct calculation of lasttime\r\n                    }));\r\n                    try {\r\n                        const response = await axios.post('http://localhost:4300/pc-info-csv', formattedData, {\r\n                            headers: {\r\n                                'Content-Type': 'application/json'\r\n                            }\r\n                        });\r\n                        console.log(\"Upload successful:\", response.data);\r\n                        alert(\"Upload successful!\");\r\n                        setUploadedData(response.data);\r\n                        setShowData(true);\r\n                    } catch (error) {\r\n                        console.error(\"Upload error:\", error.response ? error.response.data : 'Server error');\r\n                        alert(\"An error occurred while uploading. Please try again.\");\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    accept=\".csv\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile04\"\r\n                    aria-describedby=\"inputGroupFileAddon04\"\r\n                    aria-label=\"Upload\"\r\n                    onChange={handleFileChange}\r\n                />\r\n                <button className=\"btn btn-primary\" type=\"button\" id=\"inputGroupFileAddon04\" onClick={handleUpload}>\r\n                    Upload CSV\r\n                </button>\r\n            </div>\r\n\r\n            {showData && uploadedData && (\r\n                <div>\r\n                    <h2>Uploaded Data</h2>\r\n                    <pre>{JSON.stringify(uploadedData, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadPC;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}