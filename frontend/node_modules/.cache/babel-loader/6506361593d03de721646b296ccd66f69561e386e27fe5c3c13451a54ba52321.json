{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadpc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPC() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files);\n  };\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select one or more CSV files to upload.\");\n      return;\n    }\n    const formData = new FormData();\n    Array.from(selectedFiles).forEach(file => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const response = await axios.post('http://localhost:4300/pc-info', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(\"Upload successful:\", response.data);\n      alert(\"Upload successful!\");\n      // Optionally, you can handle the response or update state here\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"An error occurred while uploading. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-primary text-white\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title mb-0\",\n          children: \"Upload PC Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            className: \"form-label\",\n            children: \"Choose CSV File(s) to Upload:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"fileInput\",\n            multiple: true,\n            onChange: handleFileChange,\n            className: \"form-control-file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPC, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = UploadPC;\nexport default UploadPC;\nvar _c;\n$RefreshReg$(_c, \"UploadPC\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPC","_s","selectedFiles","setSelectedFiles","handleFileChange","e","target","files","handleUpload","length","alert","formData","FormData","Array","from","forEach","file","append","response","post","headers","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","multiple","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadpc.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UploadPC() {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFiles(e.target.files);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert(\"Please select one or more CSV files to upload.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        Array.from(selectedFiles).forEach((file) => {\r\n            formData.append(\"files\", file);\r\n        });\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:4300/pc-info', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            console.log(\"Upload successful:\", response.data);\r\n            alert(\"Upload successful!\");\r\n            // Optionally, you can handle the response or update state here\r\n        } catch (error) {\r\n            console.error(\"Upload error:\", error);\r\n            alert(\"An error occurred while uploading. Please try again.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-primary text-white\">\r\n                    <h2 className=\"card-title mb-0\">Upload PC Data</h2>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"fileInput\" className=\"form-label\">Choose CSV File(s) to Upload:</label>\r\n                        <input type=\"file\" id=\"fileInput\" multiple onChange={handleFileChange} className=\"form-control-file\" />\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={handleUpload}>Upload</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadPC;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}