{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadpc.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Papa from 'papaparse';\n\n// function UploadPC() {\n//     const [parsedData, setParsedData] = useState([]);\n\n//     const handleFileChange = (e) => {\n//         const file = e.target.files[0]; // Get the first file only for simplicity\n//         if (file) {\n//             Papa.parse(file, {\n//                 header: true, // Consider the first row of the CSV as headers\n//                 skipEmptyLines: true,\n//                 complete: function(results) {\n//                     setParsedData(results.data); // Set the parsed data to state\n//                 }\n//             });\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"input-group\">\n//                 <input\n//                     type=\"file\"\n//                     accept=\".csv\"\n//                     className=\"form-control\"\n//                     id=\"inputGroupFile04\"\n//                     aria-describedby=\"inputGroupFileAddon04\"\n//                     aria-label=\"Upload\"\n//                     onChange={handleFileChange}\n//                 />\n//             </div>\n\n//             {parsedData.length > 0 && (\n//                 <div>\n//                     <h2>Parsed CSV Data</h2>\n//                     <pre>{JSON.stringify(parsedData, null, 2)}</pre>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default UploadPC;\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadCSV() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) {\n      alert(\"Please select a CSV file to upload.\");\n      return;\n    }\n    Papa.parse(selectedFile, {\n      header: true,\n      complete: function (results) {\n        console.log(\"Parsed data:\", results.data);\n        sendDataToServer(results.data);\n      }\n    });\n  };\n  const sendDataToServer = data => {\n    axios.post('http://localhost:4300/upload-data', data).then(response => alert('Upload successful!')).catch(error => alert('Upload failed!'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".csv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadCSV, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadCSV;\nexport default UploadCSV;\nvar _c;\n$RefreshReg$(_c, \"UploadCSV\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","UploadCSV","_s","selectedFile","setSelectedFile","handleFileChange","e","target","files","handleUpload","alert","parse","header","complete","results","console","log","data","sendDataToServer","post","then","response","catch","error","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadpc.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Papa from 'papaparse';\r\n\r\n// function UploadPC() {\r\n//     const [parsedData, setParsedData] = useState([]);\r\n\r\n//     const handleFileChange = (e) => {\r\n//         const file = e.target.files[0]; // Get the first file only for simplicity\r\n//         if (file) {\r\n//             Papa.parse(file, {\r\n//                 header: true, // Consider the first row of the CSV as headers\r\n//                 skipEmptyLines: true,\r\n//                 complete: function(results) {\r\n//                     setParsedData(results.data); // Set the parsed data to state\r\n//                 }\r\n//             });\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"input-group\">\r\n//                 <input\r\n//                     type=\"file\"\r\n//                     accept=\".csv\"\r\n//                     className=\"form-control\"\r\n//                     id=\"inputGroupFile04\"\r\n//                     aria-describedby=\"inputGroupFileAddon04\"\r\n//                     aria-label=\"Upload\"\r\n//                     onChange={handleFileChange}\r\n//                 />\r\n//             </div>\r\n\r\n//             {parsedData.length > 0 && (\r\n//                 <div>\r\n//                     <h2>Parsed CSV Data</h2>\r\n//                     <pre>{JSON.stringify(parsedData, null, 2)}</pre>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default UploadPC;\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nfunction UploadCSV() {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (!selectedFile) {\r\n            alert(\"Please select a CSV file to upload.\");\r\n            return;\r\n        }\r\n\r\n        Papa.parse(selectedFile, {\r\n            header: true,\r\n            complete: function(results) {\r\n                console.log(\"Parsed data:\", results.data);\r\n                sendDataToServer(results.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const sendDataToServer = (data) => {\r\n        axios.post('http://localhost:4300/upload-data', data)\r\n            .then(response => alert('Upload successful!'))\r\n            .catch(error => alert('Upload failed!'));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" onChange={handleFileChange} accept=\".csv\" />\r\n            <button onClick={handleUpload}>Upload CSV</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadCSV;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC5BF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACN,YAAY,EAAE;MACfO,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACJ;IAEAZ,IAAI,CAACa,KAAK,CAACR,YAAY,EAAE;MACrBS,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,SAAAA,CAASC,OAAO,EAAE;QACxBC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,OAAO,CAACG,IAAI,CAAC;QACzCC,gBAAgB,CAACJ,OAAO,CAACG,IAAI,CAAC;MAClC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,gBAAgB,GAAID,IAAI,IAAK;IAC/BpB,KAAK,CAACsB,IAAI,CAAC,mCAAmC,EAAEF,IAAI,CAAC,CAChDG,IAAI,CAACC,QAAQ,IAAIX,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAC7CY,KAAK,CAACC,KAAK,IAAIb,KAAK,CAAC,gBAAgB,CAAC,CAAC;EAChD,CAAC;EAED,oBACIV,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAErB,gBAAiB;MAACsB,MAAM,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/D/B,OAAA;MAAQgC,OAAO,EAAEvB,YAAa;MAAAe,QAAA,EAAC;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd;AAAC7B,EAAA,CAlCQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAoClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}