{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// function SchoolwisePC() {\n//     const [schoolData, setSchoolData] = useState([]);\n//     const [selectedSchool, setSelectedSchool] = useState(null);\n\n//     useEffect(() => {\n//         const fetchData = async () => {\n//             try {\n//                 const response = await fetch('http://localhost:4300/get-pc');\n//                 if (response.ok) {\n//                     const data = await response.json();\n//                     setSchoolData(data);\n//                 } else {\n//                     throw new Error('Network response was not ok.');\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching data: ', error);\n//             }\n//         };\n\n//         fetchData();\n//     }, []);\n\n//     const handleSelectSchool = (schoolName) => {\n//         const filteredData = schoolData.filter(data => data.schoolname === schoolName);\n//         setSelectedSchool(filteredData);\n//     };\n\n//     return (\n//         <div className=\"container mt-5\">\n//             <ul className=\"list-group\">\n//                 {Array.from(new Set(schoolData.map(item => item.schoolname))).map(school => (\n//                     <li key={school} className=\"list-group-item list-group-item-action\" onClick={() => handleSelectSchool(school)}>\n//                         {school}\n//                     </li>\n//                 ))}\n//             </ul>\n//             {selectedSchool && selectedSchool.length > 0 && (\n//                 <div className=\"mt-4\">\n//                     {/* <h4 className='text-center'>Details for {selectedSchool[0].schoolname}</h4> */}\n//                     <table className=\"table table-striped\">\n//                         <thead>\n//                             <tr>\n//                                 <th>#</th>\n//                                 <th>School Name</th>\n//                                 <th>PC Name</th>\n//                                 <th>Start Time</th>\n//                                 <th>Last Time</th>\n//                                 <th>Total Time (s)</th>\n//                                 <th>Lab Number</th>\n//                                 <th>PC Number</th>\n//                                 <th>Day ID</th>\n//                                 <th>EIIN</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {selectedSchool.map((item, index) => (\n//                                 <tr key={index}>\n//                                     <td>{index + 1}</td>\n//                                     <td>{item.schoolname}</td>\n\n//                                     <td>{item.pcname}</td>\n//                                     <td>{item.starttime}</td>\n//                                     <td>{item.lasttime}</td>\n//                                     <td>{item.totaltime}</td>\n//                                     <td>{item.labnum}</td>\n//                                     <td>{item.pcnum}</td>\n//                                     <td>{item.dayid}</td>\n//                                     <td>{item.eiin}</td>\n//                                 </tr>\n//                             ))}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default SchoolwisePC;","map":{"version":3,"names":[],"sources":["D:/MONGODB-online/frontend/src/schoolwisepc.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// function SchoolwisePC() {\r\n//     const [schoolData, setSchoolData] = useState([]);\r\n//     const [selectedSchool, setSelectedSchool] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const fetchData = async () => {\r\n//             try {\r\n//                 const response = await fetch('http://localhost:4300/get-pc');\r\n//                 if (response.ok) {\r\n//                     const data = await response.json();\r\n//                     setSchoolData(data);\r\n//                 } else {\r\n//                     throw new Error('Network response was not ok.');\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching data: ', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchData();\r\n//     }, []);\r\n\r\n//     const handleSelectSchool = (schoolName) => {\r\n//         const filteredData = schoolData.filter(data => data.schoolname === schoolName);\r\n//         setSelectedSchool(filteredData);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"container mt-5\">\r\n//             <ul className=\"list-group\">\r\n//                 {Array.from(new Set(schoolData.map(item => item.schoolname))).map(school => (\r\n//                     <li key={school} className=\"list-group-item list-group-item-action\" onClick={() => handleSelectSchool(school)}>\r\n//                         {school}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//             {selectedSchool && selectedSchool.length > 0 && (\r\n//                 <div className=\"mt-4\">\r\n//                     {/* <h4 className='text-center'>Details for {selectedSchool[0].schoolname}</h4> */}\r\n//                     <table className=\"table table-striped\">\r\n//                         <thead>\r\n//                             <tr>\r\n//                                 <th>#</th>\r\n//                                 <th>School Name</th>\r\n//                                 <th>PC Name</th>\r\n//                                 <th>Start Time</th>\r\n//                                 <th>Last Time</th>\r\n//                                 <th>Total Time (s)</th>\r\n//                                 <th>Lab Number</th>\r\n//                                 <th>PC Number</th>\r\n//                                 <th>Day ID</th>\r\n//                                 <th>EIIN</th>\r\n//                             </tr>\r\n//                         </thead>\r\n//                         <tbody>\r\n//                             {selectedSchool.map((item, index) => (\r\n//                                 <tr key={index}>\r\n//                                     <td>{index + 1}</td>\r\n//                                     <td>{item.schoolname}</td>\r\n\r\n//                                     <td>{item.pcname}</td>\r\n//                                     <td>{item.starttime}</td>\r\n//                                     <td>{item.lasttime}</td>\r\n//                                     <td>{item.totaltime}</td>\r\n//                                     <td>{item.labnum}</td>\r\n//                                     <td>{item.pcnum}</td>\r\n//                                     <td>{item.dayid}</td>\r\n//                                     <td>{item.eiin}</td>\r\n//                                 </tr>\r\n//                             ))}\r\n//                         </tbody>\r\n//                     </table>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default SchoolwisePC;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}