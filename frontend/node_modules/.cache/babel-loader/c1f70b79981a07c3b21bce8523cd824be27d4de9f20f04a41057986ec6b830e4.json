{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\schoolwisepc.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Schoolwisepc() {\n  _s();\n  const [schoolList, setSchoolList] = useState([]);\n  const [selectedSchool, setSelectedSchool] = useState(null);\n  const [pcData, setPcData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const baseUrl = process.env.REACT_APP_URL;\n  useEffect(() => {\n    // Fetch the list of schools and their EIINs\n    const fetchSchools = async () => {\n      try {\n        const response = await fetch(`${baseUrl}/schools`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSchoolList(data);\n      } catch (error) {\n        setError('Failed to fetch schools: ' + error.message);\n      }\n    };\n    fetchSchools();\n  }, [baseUrl]);\n  console.log(process.env.REACT_APP_URL);\n  const fetchData = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${baseUrl}/get-pc?school=${selectedSchool}`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPcData(data);\n    } catch (error) {\n      setError('Failed to fetch data: ' + error.message);\n    }\n    setIsLoading(false);\n  };\n  const toggleTableVisibility = () => {\n    if (!isTableVisible) {\n      if (!selectedSchool) {\n        setError('Please select a school.');\n        return;\n      }\n      fetchData(); // Fetch data only when table is becoming visible\n    }\n    setIsTableVisible(!isTableVisible);\n  };\n  const handleSchoolChange = event => {\n    setSelectedSchool(event.target.value);\n    setPcData([]); // Reset pcData when a new school is selected\n    setError(null); // Reset error when a new school is selected\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSchool,\n      onChange: handleSchoolChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a school...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), schoolList.map((school, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: school.EIIN,\n        children: [school.schoolName, \" - \", school.EIIN]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100\",\n      onClick: toggleTableVisibility,\n      disabled: isLoading,\n      children: isLoading ? 'Loading...' : isTableVisible ? 'Hide Table' : 'Show PC Data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), isTableVisible && pcData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PC Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Time (s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"School\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lab Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PC Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: pcData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.pcname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.starttime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.lasttime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totaltime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.schoolname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.labnum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.pcnum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Schoolwisepc, \"tlOGJfPyklpsiNKCk9qLMJLbBW4=\");\n_c = Schoolwisepc;\nexport default Schoolwisepc;\nvar _c;\n$RefreshReg$(_c, \"Schoolwisepc\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Schoolwisepc","_s","schoolList","setSchoolList","selectedSchool","setSelectedSchool","pcData","setPcData","isLoading","setIsLoading","error","setError","isTableVisible","setIsTableVisible","baseUrl","process","env","REACT_APP_URL","fetchSchools","response","fetch","ok","Error","data","json","message","console","log","fetchData","toggleTableVisibility","handleSchoolChange","event","target","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","school","index","EIIN","schoolName","className","onClick","disabled","style","color","length","item","pcname","starttime","lasttime","totaltime","schoolname","labnum","pcnum","_id","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/schoolwisepc.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Schoolwisepc() {\r\n  const [schoolList, setSchoolList] = useState([]);\r\n  const [selectedSchool, setSelectedSchool] = useState(null);\r\n  const [pcData, setPcData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isTableVisible, setIsTableVisible] = useState(false);\r\n  const baseUrl = process.env.REACT_APP_URL;\r\n\r\n  useEffect(() => {\r\n    // Fetch the list of schools and their EIINs\r\n    const fetchSchools = async () => {\r\n      try {\r\n        const response = await fetch(`${baseUrl}/schools`);\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setSchoolList(data);\r\n      } catch (error) {\r\n        setError('Failed to fetch schools: ' + error.message);\r\n      }\r\n    };\r\n\r\n    fetchSchools();\r\n  }, [baseUrl]);\r\n\r\n  console.log(process.env.REACT_APP_URL);\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${baseUrl}/get-pc?school=${selectedSchool}`);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setPcData(data);\r\n    } catch (error) {\r\n      setError('Failed to fetch data: ' + error.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const toggleTableVisibility = () => {\r\n    if (!isTableVisible) {\r\n      if (!selectedSchool) {\r\n        setError('Please select a school.');\r\n        return;\r\n      }\r\n      fetchData(); // Fetch data only when table is becoming visible\r\n    }\r\n    setIsTableVisible(!isTableVisible);\r\n  };\r\n\r\n  const handleSchoolChange = (event) => {\r\n    setSelectedSchool(event.target.value);\r\n    setPcData([]); // Reset pcData when a new school is selected\r\n    setError(null); // Reset error when a new school is selected\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <select value={selectedSchool} onChange={handleSchoolChange}>\r\n        <option value=\"\">Select a school...</option>\r\n        {schoolList.map((school, index) => (\r\n          <option key={index} value={school.EIIN}>\r\n            {school.schoolName} - {school.EIIN}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button className='btn btn-primary w-100' onClick={toggleTableVisibility} disabled={isLoading}>\r\n        {isLoading ? 'Loading...' : isTableVisible ? 'Hide Table' : 'Show PC Data'}\r\n      </button>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      {isTableVisible && pcData.length > 0 && (\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>PC Name</th>\r\n              <th>Start Time</th>\r\n              <th>Last Time</th>\r\n              <th>Total Time (s)</th>\r\n              <th>School</th>\r\n              <th>Lab Number</th>\r\n              <th>PC Number</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {pcData.map(item => (\r\n              <tr key={item._id}>\r\n                <td>{item.pcname}</td>\r\n                <td>{item.starttime}</td>\r\n                <td>{item.lasttime}</td>\r\n                <td>{item.totaltime}</td>\r\n                <td>{item.schoolname}</td>\r\n                <td>{item.labnum}</td>\r\n                <td>{item.pcnum}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schoolwisepc;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}