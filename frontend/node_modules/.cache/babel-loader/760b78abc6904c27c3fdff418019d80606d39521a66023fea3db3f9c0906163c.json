{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\allschooldownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllSchoolDownload() {\n  _s();\n  const [schoolData, setSchoolData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:4300/get-school');\n        if (response.ok) {\n          const data = await response.json();\n          setSchoolData(data);\n        } else {\n          throw new Error('Network response was not ok.');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const convertToCSV = objArray => {\n    const array = objArray instanceof Array ? objArray : [objArray];\n    let str = '';\n\n    // Extract headers\n    const headers = Object.keys(array[0]).join(',');\n    str += headers + '\\r\\n';\n\n    // Extract data\n    for (let i = 0; i < array.length; i++) {\n      let line = '';\n      for (let index in array[i]) {\n        if (line !== '') line += ',';\n        line += array[i][index];\n      }\n      str += line + '\\r\\n';\n    }\n    return str;\n  };\n  const downloadCSV = () => {\n    const csvData = convertToCSV(schoolData);\n    const blob = new Blob([csvData], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', 'all-school-info.csv');\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger \",\n      onClick: downloadCSV,\n      children: \"Download All Schools Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(AllSchoolDownload, \"FzrSos/hRUMB+CbLkP/jIRZo45g=\");\n_c = AllSchoolDownload;\nexport default AllSchoolDownload;\nvar _c;\n$RefreshReg$(_c, \"AllSchoolDownload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AllSchoolDownload","_s","schoolData","setSchoolData","fetchData","response","fetch","ok","data","json","Error","error","console","convertToCSV","objArray","array","Array","str","headers","Object","keys","join","i","length","line","index","downloadCSV","csvData","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/allschooldownload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction AllSchoolDownload() {\r\n    const [schoolData, setSchoolData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:4300/get-school');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setSchoolData(data);\r\n                } else {\r\n                    throw new Error('Network response was not ok.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const convertToCSV = (objArray) => {\r\n        const array = objArray instanceof Array ? objArray : [objArray];\r\n        let str = '';\r\n\r\n        // Extract headers\r\n        const headers = Object.keys(array[0]).join(',');\r\n        str += headers + '\\r\\n';\r\n\r\n        // Extract data\r\n        for (let i = 0; i < array.length; i++) {\r\n            let line = '';\r\n            for (let index in array[i]) {\r\n                if (line !== '') line += ',';\r\n                line += array[i][index];\r\n            }\r\n            str += line + '\\r\\n';\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n    const downloadCSV = () => {\r\n        const csvData = convertToCSV(schoolData);\r\n        const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', 'all-school-info.csv');\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"btn btn-danger \" onClick={downloadCSV}>Download All Schools Info</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AllSchoolDownload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}