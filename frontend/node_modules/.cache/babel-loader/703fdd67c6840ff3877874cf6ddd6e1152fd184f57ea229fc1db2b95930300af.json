{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\interval.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Interval() {\n  _s();\n  const [intervalData, setIntervalData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const baseUrl = process.env.REACT_APP_URL; // Ensure your environment variable is set\n\n  useEffect(() => {\n    if (isTableVisible && intervalData.length === 0) {\n      // Fetch data only when table is visible and data is not already loaded\n      fetchData();\n    }\n  }, [isTableVisible]);\n  const fetchData = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${baseUrl}/get-interval`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setIntervalData(data);\n    } catch (error) {\n      setError('Failed to fetch data: ' + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const toggleTableVisibility = () => {\n    setIsTableVisible(!isTableVisible);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100 mb-3\",\n      onClick: toggleTableVisibility,\n      disabled: isLoading,\n      children: isLoading ? 'Loading...' : isTableVisible ? 'Hide Interval Data' : 'Show Interval Data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger w-100\",\n      children: \"ALL Interval Download\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), isTableVisible && intervalData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PC Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Time (s)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"School Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Lab Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PC Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: intervalData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.pcname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.starttime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.lasttime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totaltime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.schoolname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.labnum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.pcnum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Interval, \"dwVAIBsqcKMeJjprV60xzTfmLbQ=\");\n_c = Interval;\nexport default Interval;\nvar _c;\n$RefreshReg$(_c, \"Interval\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Interval","_s","intervalData","setIntervalData","isLoading","setIsLoading","error","setError","isTableVisible","setIsTableVisible","baseUrl","process","env","REACT_APP_URL","length","fetchData","response","fetch","ok","Error","data","json","message","toggleTableVisibility","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","item","index","pcname","starttime","lasttime","totaltime","schoolname","labnum","pcnum","_id","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/interval.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Interval() {\r\n  const [intervalData, setIntervalData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isTableVisible, setIsTableVisible] = useState(false);\r\n  const baseUrl = process.env.REACT_APP_URL; // Ensure your environment variable is set\r\n\r\n  useEffect(() => {\r\n    if (isTableVisible && intervalData.length === 0) { // Fetch data only when table is visible and data is not already loaded\r\n      fetchData();\r\n    }\r\n  }, [isTableVisible]);\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(`${baseUrl}/get-interval`);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setIntervalData(data);\r\n    } catch (error) {\r\n      setError('Failed to fetch data: ' + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleTableVisibility = () => {\r\n    setIsTableVisible(!isTableVisible);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className='btn btn-primary w-100 mb-3' onClick={toggleTableVisibility} disabled={isLoading}>\r\n        {isLoading ? 'Loading...' : isTableVisible ? 'Hide Interval Data' : 'Show Interval Data'}\r\n      </button>\r\n\r\n      <button className='btn btn-danger w-100'>ALL Interval Download</button>\r\n\r\n\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      {isTableVisible && intervalData.length > 0 && (\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>PC Name</th>\r\n              <th>Start Time</th>\r\n              <th>Last Time</th>\r\n              <th>Total Time (s)</th>\r\n              <th>School Name</th>\r\n              <th>Lab Number</th>\r\n              <th>PC Number</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {intervalData.map((item, index) => (\r\n              <tr key={item._id}>\r\n                <td>{index + 1}</td>\r\n                <td>{item.pcname}</td>\r\n                <td>{item.starttime}</td>\r\n                <td>{item.lasttime}</td>\r\n                <td>{item.totaltime}</td>\r\n                <td>{item.schoolname}</td>\r\n                <td>{item.labnum}</td>\r\n                <td>{item.pcnum}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interval;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}