{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadvideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadVideoData() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files);\n  };\n  const handleUpload = () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select a CSV file to upload.\");\n      return;\n    }\n    Array.from(selectedFiles).forEach(file => {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: function (results) {\n          const formattedData = results.data.map(item => ({\n            pcname: item[\"PC Name\"],\n            eiin: parseInt(item[\"EIIN\"]),\n            schoolname: item[\"School Name\"],\n            labnum: parseInt(item[\"Lab\"]),\n            pcnum: parseInt(item[\"PC\"]),\n            video_name: item[\"Video Name\"],\n            video_start: item[\"Video Start\"],\n            video_start_date_time: `${item[\"Video Start\"]} ${item[\"Video Start Date Time\"]}`,\n            video_end: item[\"Video End\"],\n            video_end_date_time: `${item[\"Video End\"]} ${item[\"Video End Date\"]}`,\n            duration: parseInt(item[\"Duration\"]),\n            total_time: item[\"Total Time\"]\n          }));\n          sendDataToServer(formattedData);\n        }\n      });\n    });\n  };\n  const sendDataToServer = data => {\n    axios.post('http://localhost:4300/video-info', data).then(response => {\n      alert('Video data uploaded successfully!');\n      console.log(response.data);\n    }).catch(error => {\n      alert('Failed to upload video data: ' + (error.response ? error.response.data : error.message));\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        onChange: handleFileChange,\n        accept: \".csv\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpload,\n        children: \"Upload Video Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadVideoData, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = UploadVideoData;\nexport default UploadVideoData;\nvar _c;\n$RefreshReg$(_c, \"UploadVideoData\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","UploadVideoData","_s","selectedFiles","setSelectedFiles","handleFileChange","e","target","files","handleUpload","length","alert","Array","from","forEach","file","parse","header","skipEmptyLines","complete","results","formattedData","data","map","item","pcname","eiin","parseInt","schoolname","labnum","pcnum","video_name","video_start","video_start_date_time","video_end","video_end_date_time","duration","total_time","sendDataToServer","post","then","response","console","log","catch","error","message","className","children","type","onChange","accept","multiple","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadvideo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nfunction UploadVideoData() {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFiles(e.target.files);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert(\"Please select a CSV file to upload.\");\r\n            return;\r\n        }\r\n\r\n        Array.from(selectedFiles).forEach(file => {\r\n            Papa.parse(file, {\r\n                header: true,\r\n                skipEmptyLines: true,\r\n                complete: function(results) {\r\n                    const formattedData = results.data.map(item => ({\r\n                        pcname: item[\"PC Name\"],\r\n                        eiin: parseInt(item[\"EIIN\"]),\r\n                        schoolname: item[\"School Name\"],\r\n                        labnum: parseInt(item[\"Lab\"]),\r\n                        pcnum: parseInt(item[\"PC\"]),\r\n                        video_name: item[\"Video Name\"],\r\n                        video_start: item[\"Video Start\"],\r\n                        video_start_date_time: `${item[\"Video Start\"]} ${item[\"Video Start Date Time\"]}`,\r\n                        video_end: item[\"Video End\"],\r\n                        video_end_date_time: `${item[\"Video End\"]} ${item[\"Video End Date\"]}`,\r\n                        duration: parseInt(item[\"Duration\"]),\r\n                        total_time: item[\"Total Time\"]\r\n                    }));\r\n                    sendDataToServer(formattedData);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    const sendDataToServer = (data) => {\r\n        axios.post('http://localhost:4300/video-info', data)\r\n            .then(response => {\r\n                alert('Video data uploaded successfully!');\r\n                console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to upload video data: ' + (error.response ? error.response.data : error.message));\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"file\" className=\"form-control\" onChange={handleFileChange} accept=\".csv\" multiple />\r\n                <button className=\"btn btn-primary\" onClick={handleUpload}>Upload Video Data</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadVideoData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}