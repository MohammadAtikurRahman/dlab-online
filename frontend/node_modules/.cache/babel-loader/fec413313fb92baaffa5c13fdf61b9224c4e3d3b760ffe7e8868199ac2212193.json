{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadpc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPC() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files);\n  };\n  const handleUpload = async () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select one or more CSV files to upload.\");\n      return;\n    }\n    const formData = new FormData();\n    Array.from(selectedFiles).forEach(file => {\n      formData.append(\"files\", file);\n    });\n    try {\n      const response = await axios.post(\"http://localhost:4300/pc-info\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Upload successful:\", response.data);\n      alert(\"Upload successful!\");\n      // Optionally, you can handle the response or update state here\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      alert(\"An error occurred while uploading. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: [\"      \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Upload PC Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: [\"   \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: handleFileChange,\n          className: \"form-control-file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mt-3\",\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPC, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = UploadPC;\nexport default UploadPC;\nvar _c;\n$RefreshReg$(_c, \"UploadPC\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPC","_s","selectedFiles","setSelectedFiles","handleFileChange","e","target","files","handleUpload","length","alert","formData","FormData","Array","from","forEach","file","append","response","post","headers","console","log","data","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","onClick","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadpc.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction UploadPC() {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setSelectedFiles(e.target.files);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (selectedFiles.length === 0) {\r\n      alert(\"Please select one or more CSV files to upload.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    Array.from(selectedFiles).forEach((file) => {\r\n      formData.append(\"files\", file);\r\n    });\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:4300/pc-info\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"Upload successful:\", response.data);\r\n      alert(\"Upload successful!\");\r\n      // Optionally, you can handle the response or update state here\r\n    } catch (error) {\r\n      console.error(\"Upload error:\", error);\r\n      alert(\"An error occurred while uploading. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">      <h2>Upload PC Data</h2>\r\n</div>\r\n\r\n        <div className=\"col-4\">   <input\r\n        type=\"file\"\r\n        multiple\r\n        onChange={handleFileChange}\r\n        className=\"form-control-file\"\r\n      /></div>\r\n\r\n        <div className=\"col-4\"></div>\r\n\r\n\r\n      </div>\r\n\r\n    \r\n      <button className=\"btn btn-primary mt-3\" onClick={handleUpload}>\r\n        Upload\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadPC;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,gBAAgB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIN,aAAa,CAACO,MAAM,KAAK,CAAC,EAAE;MAC9BC,KAAK,CAAC,gDAAgD,CAAC;MACvD;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BC,KAAK,CAACC,IAAI,CAACZ,aAAa,CAAC,CAACa,OAAO,CAAEC,IAAI,IAAK;MAC1CL,QAAQ,CAACM,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;IAChC,CAAC,CAAC;IAEF,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAC/B,+BAA+B,EAC/BR,QAAQ,EACR;QACES,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;MAChDb,KAAK,CAAC,oBAAoB,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCd,KAAK,CAAC,sDAAsD,CAAC;IAC/D;EACF,CAAC;EAED,oBACEX,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClB1B,OAAA;QAAK2B,SAAS,EAAC,OAAO;QAAAD,QAAA,GAAC,QAAM,eAAA1B,OAAA;UAAA0B,QAAA,EAAI;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eAEE/B,OAAA;QAAK2B,SAAS,EAAC,OAAO;QAAAD,QAAA,GAAC,KAAG,eAAA1B,OAAA;UAC1BgC,IAAI,EAAC,MAAM;UACXC,QAAQ;UACRC,QAAQ,EAAE7B,gBAAiB;UAC3BsB,SAAS,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN/B,OAAA;QAAK2B,SAAS,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAG1B,CAAC,eAGN/B,OAAA;MAAQ2B,SAAS,EAAC,sBAAsB;MAACQ,OAAO,EAAE1B,YAAa;MAAAiB,QAAA,EAAC;IAEhE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC7B,EAAA,CA7DQD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA+DjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}