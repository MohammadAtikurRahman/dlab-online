{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadinterval.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadInterval() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const baseUrl = process.env.REACT_APP_URL;\n  const handleFileChange = e => {\n    setSelectedFiles(e.target.files); // Capture all selected files\n  };\n  const handleUpload = () => {\n    if (selectedFiles.length === 0) {\n      alert(\"Please select one or more CSV files to upload.\");\n      return;\n    }\n\n    // Process each file\n    Array.from(selectedFiles).forEach(file => {\n      Papa.parse(file, {\n        header: true,\n        // Treats the first row of the CSV as headers\n        skipEmptyLines: true,\n        complete: function (results) {\n          const transformedData = results.data.map(item => ({\n            schoolname: item[\"School Name\"],\n            eiin: parseInt(item[\"EIIN\"]),\n            labnum: parseInt(item[\"Lab Number\"]),\n            pcnum: parseInt(item[\"PC Number\"]),\n            starttime: item[\"Session Start Time\"],\n            lasttime: item[\"Last Checked Time\"],\n            totaltime: parseInt(item[\"Duration\"]) // Ensure you use this correctly if needed\n          }));\n          sendDataToServer(transformedData);\n        }\n      });\n    });\n  };\n\n  // const parseDuration = (duration) => {\n  //     // Converts duration from 'HH Oh MMm SSs' to total seconds\n  //     const parts = duration.match(/(\\d+)\\sOh\\s(\\d+)m\\s(\\d+)s/);\n  //     if (parts) {\n  //         return parseInt(parts[1]) * 3600 + parseInt(parts[2]) * 60 + parseInt(parts[3]);\n  //     }\n  //     return 0;\n  // };\n\n  const sendDataToServer = data => {\n    axios.post('${baseUrl}/inter-info', data).then(response => {\n      alert('Interval data uploaded successfully!');\n      console.log(response.data);\n    }).catch(error => {\n      alert('Failed to upload interval data: ' + error.message);\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        multiple: true,\n        onChange: handleFileChange,\n        accept: \".csv\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpload,\n        children: \"Upload Interval Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadInterval, \"6iJwk1gH4hB0xa84T6RYQXjKu58=\");\n_c = UploadInterval;\nexport default UploadInterval;\nvar _c;\n$RefreshReg$(_c, \"UploadInterval\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","UploadInterval","_s","selectedFiles","setSelectedFiles","baseUrl","process","env","REACT_APP_URL","handleFileChange","e","target","files","handleUpload","length","alert","Array","from","forEach","file","parse","header","skipEmptyLines","complete","results","transformedData","data","map","item","schoolname","eiin","parseInt","labnum","pcnum","starttime","lasttime","totaltime","sendDataToServer","post","then","response","console","log","catch","error","message","className","children","type","multiple","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadinterval.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nfunction UploadInterval() {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const baseUrl = process.env.REACT_APP_URL;\r\n\r\n    const handleFileChange = (e) => {\r\n        setSelectedFiles(e.target.files);  // Capture all selected files\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (selectedFiles.length === 0) {\r\n            alert(\"Please select one or more CSV files to upload.\");\r\n            return;\r\n        }\r\n\r\n        // Process each file\r\n        Array.from(selectedFiles).forEach(file => {\r\n            Papa.parse(file, {\r\n                header: true, // Treats the first row of the CSV as headers\r\n                skipEmptyLines: true,\r\n                complete: function(results) {\r\n                    const transformedData = results.data.map(item => ({\r\n                        schoolname: item[\"School Name\"],\r\n                        eiin: parseInt(item[\"EIIN\"]),\r\n                        labnum: parseInt(item[\"Lab Number\"]),\r\n                        pcnum: parseInt(item[\"PC Number\"]),\r\n                        starttime: item[\"Session Start Time\"],\r\n                        lasttime: item[\"Last Checked Time\"],\r\n                        totaltime: parseInt(item[\"Duration\"])  // Ensure you use this correctly if needed\r\n                    }));\r\n                    sendDataToServer(transformedData);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // const parseDuration = (duration) => {\r\n    //     // Converts duration from 'HH Oh MMm SSs' to total seconds\r\n    //     const parts = duration.match(/(\\d+)\\sOh\\s(\\d+)m\\s(\\d+)s/);\r\n    //     if (parts) {\r\n    //         return parseInt(parts[1]) * 3600 + parseInt(parts[2]) * 60 + parseInt(parts[3]);\r\n    //     }\r\n    //     return 0;\r\n    // };\r\n\r\n    const sendDataToServer = (data) => {\r\n        axios.post('${baseUrl}/inter-info', data)\r\n            .then(response => {\r\n                alert('Interval data uploaded successfully!');\r\n                console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                alert('Failed to upload interval data: ' + error.message);\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"file\" className=\"form-control\" multiple onChange={handleFileChange} accept=\".csv\" />\r\n                <button className=\"btn btn-primary\" onClick={handleUpload}>Upload Interval Data</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadInterval;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}