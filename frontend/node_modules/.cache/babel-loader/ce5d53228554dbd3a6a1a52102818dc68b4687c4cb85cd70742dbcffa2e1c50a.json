{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\schoolwisepc.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SchoolwisePC() {\n  _s();\n  const [schoolData, setSchoolData] = useState([]);\n  const [selectedSchool, setSelectedSchool] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:4300/get-pc');\n        if (response.ok) {\n          const data = await response.json();\n          setSchoolData(data);\n        } else {\n          throw new Error('Network response was not ok.');\n        }\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSelectSchool = schoolName => {\n    const filteredData = schoolData.filter(data => data.schoolname === schoolName);\n    setSelectedSchool(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: Array.from(new Set(schoolData.map(item => item.schoolname))).map(school => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item list-group-item-action\",\n        onClick: () => handleSelectSchool(school),\n        children: [school, EII]\n      }, school, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), selectedSchool && selectedSchool.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedSchool[0].schoolname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PC Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Time Used (s)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Used\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: selectedSchool.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.pcname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.totaltime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.lasttime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(SchoolwisePC, \"AY//KsmwvV2lIewhH2yvBVHy/JU=\");\n_c = SchoolwisePC;\nexport default SchoolwisePC;\nvar _c;\n$RefreshReg$(_c, \"SchoolwisePC\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SchoolwisePC","_s","schoolData","setSchoolData","selectedSchool","setSelectedSchool","fetchData","response","fetch","ok","data","json","Error","error","console","handleSelectSchool","schoolName","filteredData","filter","schoolname","className","children","Array","from","Set","map","item","school","onClick","EII","fileName","_jsxFileName","lineNumber","columnNumber","length","index","pcname","totaltime","lasttime","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/schoolwisepc.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SchoolwisePC() {\r\n    const [schoolData, setSchoolData] = useState([]);\r\n    const [selectedSchool, setSelectedSchool] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:4300/get-pc');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setSchoolData(data);\r\n                } else {\r\n                    throw new Error('Network response was not ok.');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching data: ', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleSelectSchool = (schoolName) => {\r\n        const filteredData = schoolData.filter(data => data.schoolname === schoolName);\r\n        setSelectedSchool(filteredData);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <ul className=\"list-group\">\r\n                {Array.from(new Set(schoolData.map(item => item.schoolname))).map(school => (\r\n                    <li key={school} className=\"list-group-item list-group-item-action\" onClick={() => handleSelectSchool(school)}>\r\n                        {school}\r\n                        {EII}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            {selectedSchool && selectedSchool.length > 0 && (\r\n                <div className=\"mt-4\">\r\n                    <h2>{selectedSchool[0].schoolname}</h2>\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>PC Name</th>\r\n                                <th>Total Time Used (s)</th>\r\n                                <th>Last Used</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {selectedSchool.map((item, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{item.pcname}</td>\r\n                                    <td>{item.totaltime}</td>\r\n                                    <td>{item.lasttime}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SchoolwisePC;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}