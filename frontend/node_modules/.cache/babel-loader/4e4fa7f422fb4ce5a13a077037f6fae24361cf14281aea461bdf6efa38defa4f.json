{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadpc.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Papa from 'papaparse';\n\n// function UploadPC() {\n//     const [parsedData, setParsedData] = useState([]);\n\n//     const handleFileChange = (e) => {\n//         const file = e.target.files[0]; // Get the first file only for simplicity\n//         if (file) {\n//             Papa.parse(file, {\n//                 header: true, // Consider the first row of the CSV as headers\n//                 skipEmptyLines: true,\n//                 complete: function(results) {\n//                     setParsedData(results.data); // Set the parsed data to state\n//                 }\n//             });\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <div className=\"input-group\">\n//                 <input\n//                     type=\"file\"\n//                     accept=\".csv\"\n//                     className=\"form-control\"\n//                     id=\"inputGroupFile04\"\n//                     aria-describedby=\"inputGroupFileAddon04\"\n//                     aria-label=\"Upload\"\n//                     onChange={handleFileChange}\n//                 />\n//             </div>\n\n//             {parsedData.length > 0 && (\n//                 <div>\n//                     <h2>Parsed CSV Data</h2>\n//                     <pre>{JSON.stringify(parsedData, null, 2)}</pre>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default UploadPC;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPC() {\n  _s();\n  const [parsedData, setParsedData] = useState([]);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        complete: function (results) {\n          setParsedData(results.data);\n        }\n      });\n    }\n  };\n  const handleUpload = async () => {\n    if (parsedData.length > 0) {\n      try {\n        const response = await axios.post('http://localhost:4300/pc-info', parsedData, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        alert('Data uploaded successfully!');\n        console.log(response.data);\n      } catch (error) {\n        alert('Upload failed!');\n        console.error(error);\n      }\n    } else {\n      alert('No data to upload. Please select a CSV file and wait for it to be parsed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        className: \"form-control\",\n        id: \"inputGroupFile04\",\n        \"aria-describedby\": \"inputGroupFileAddon04\",\n        \"aria-label\": \"Upload\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpload,\n        children: \"Upload Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), parsedData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Parsed CSV Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(parsedData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPC, \"Mu0IZV9ZRt/+4IZt0I5LDXjGIho=\");\n_c = UploadPC;\nexport default UploadPC;\nvar _c;\n$RefreshReg$(_c, \"UploadPC\");","map":{"version":3,"names":["React","useState","axios","Papa","jsxDEV","_jsxDEV","UploadPC","_s","parsedData","setParsedData","handleFileChange","e","file","target","files","parse","header","skipEmptyLines","complete","results","data","handleUpload","length","response","post","headers","alert","console","log","error","children","className","type","accept","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadpc.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import Papa from 'papaparse';\r\n\r\n// function UploadPC() {\r\n//     const [parsedData, setParsedData] = useState([]);\r\n\r\n//     const handleFileChange = (e) => {\r\n//         const file = e.target.files[0]; // Get the first file only for simplicity\r\n//         if (file) {\r\n//             Papa.parse(file, {\r\n//                 header: true, // Consider the first row of the CSV as headers\r\n//                 skipEmptyLines: true,\r\n//                 complete: function(results) {\r\n//                     setParsedData(results.data); // Set the parsed data to state\r\n//                 }\r\n//             });\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"input-group\">\r\n//                 <input\r\n//                     type=\"file\"\r\n//                     accept=\".csv\"\r\n//                     className=\"form-control\"\r\n//                     id=\"inputGroupFile04\"\r\n//                     aria-describedby=\"inputGroupFileAddon04\"\r\n//                     aria-label=\"Upload\"\r\n//                     onChange={handleFileChange}\r\n//                 />\r\n//             </div>\r\n\r\n//             {parsedData.length > 0 && (\r\n//                 <div>\r\n//                     <h2>Parsed CSV Data</h2>\r\n//                     <pre>{JSON.stringify(parsedData, null, 2)}</pre>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default UploadPC;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Papa from 'papaparse';\r\n\r\nfunction UploadPC() {\r\n    const [parsedData, setParsedData] = useState([]);\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            Papa.parse(file, {\r\n                header: true,\r\n                skipEmptyLines: true,\r\n                complete: function(results) {\r\n                    setParsedData(results.data);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (parsedData.length > 0) {\r\n            try {\r\n                const response = await axios.post('http://localhost:4300/pc-info', parsedData, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                alert('Data uploaded successfully!');\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                alert('Upload failed!');\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            alert('No data to upload. Please select a CSV file and wait for it to be parsed.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\".csv\"\r\n                    className=\"form-control\"\r\n                    id=\"inputGroupFile04\"\r\n                    aria-describedby=\"inputGroupFileAddon04\"\r\n                    aria-label=\"Upload\"\r\n                    onChange={handleFileChange}\r\n                />\r\n                <button className=\"btn btn-primary\" onClick={handleUpload}>\r\n                    Upload Data\r\n                </button>\r\n            </div>\r\n\r\n            {parsedData.length > 0 && (\r\n                <div>\r\n                    <h2>Parsed CSV Data</h2>\r\n                    <pre>{JSON.stringify(parsedData, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadPC;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}