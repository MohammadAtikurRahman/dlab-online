{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\allschooldownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllSchoolDownload() {\n  _s();\n  const [schoolData, setSchoolData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:4300/get-pc\");\n        if (response.ok) {\n          const data = await response.json();\n          setSchoolData(data);\n        } else {\n          throw new Error(\"Failed to fetch data.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(error.message);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const convertToCSV = React.useCallback(data => {\n    if (!Array.isArray(data) || data.length === 0) {\n      console.error('Invalid or empty data provided to convertToCSV');\n      return '';\n    }\n    try {\n      const keys = Object.keys(data[0]);\n      const csv = data.map(row => keys.map(key => `\"${String(row[key]).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n');\n      return keys.join(',') + '\\n' + csv;\n    } catch (error) {\n      console.error('Error converting data to CSV:', error);\n      return '';\n    }\n  }, []);\n  const downloadCSV = () => {\n    const csvData = convertToCSV(schoolData);\n    const blob = new Blob([csvData], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\"download\", \"all-school-info.csv\");\n    link.style.visibility = \"hidden\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger w-100\",\n      onClick: downloadCSV,\n      disabled: loading || error || schoolData.length === 0,\n      children: loading ? \"Loading...\" : \"Download All Schools Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(AllSchoolDownload, \"aF4mIUhiUk3c90BD7n4jWl52abA=\");\n_c = AllSchoolDownload;\nexport default AllSchoolDownload;\nvar _c;\n$RefreshReg$(_c, \"AllSchoolDownload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AllSchoolDownload","_s","schoolData","setSchoolData","loading","setLoading","error","setError","fetchData","response","fetch","ok","data","json","Error","console","message","convertToCSV","useCallback","Array","isArray","length","keys","Object","csv","map","row","key","String","replace","join","downloadCSV","csvData","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/allschooldownload.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction AllSchoolDownload() {\r\n  const [schoolData, setSchoolData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(\"http://localhost:4300/get-pc\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSchoolData(data);\r\n        } else {\r\n          throw new Error(\"Failed to fetch data.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n        setError(error.message);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const convertToCSV = React.useCallback((data) => {\r\n    if (!Array.isArray(data) || data.length === 0) {\r\n        console.error('Invalid or empty data provided to convertToCSV');\r\n        return '';\r\n    }\r\n    try {\r\n        const keys = Object.keys(data[0]);\r\n        const csv = data.map(row => keys.map(key => `\"${String(row[key]).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\n');\r\n        return keys.join(',') + '\\n' + csv;\r\n    } catch (error) {\r\n        console.error('Error converting data to CSV:', error);\r\n        return '';\r\n    }\r\n  }, []);\r\n\r\n  const downloadCSV = () => {\r\n    const csvData = convertToCSV(schoolData);\r\n    const blob = new Blob([csvData], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"all-school-info.csv\");\r\n    link.style.visibility = \"hidden\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-danger w-100\" onClick={downloadCSV} disabled={loading || error || schoolData.length === 0}>\r\n        {loading ? \"Loading...\" : \"Download All Schools Info\"}\r\n      </button>\r\n      {error && <p className=\"text-danger\">Error: {error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllSchoolDownload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}