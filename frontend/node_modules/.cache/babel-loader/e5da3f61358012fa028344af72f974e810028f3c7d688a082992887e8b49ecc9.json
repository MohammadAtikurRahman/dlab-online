{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\pc.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pc() {\n  _s();\n  const [pcData, setPcData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const baseUrl = process.env.REACT_APP_URL;\n  console.log(process.env.REACT_APP_URL); // This should log the base URL\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${baseUrl}/get-pc`);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPcData(data);\n    } catch (error) {\n      setError('Failed to fetch data: ' + error.message);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-\",\n      onClick: fetchData,\n      disabled: isLoading,\n      children: isLoading ? 'Loading...' : 'Get PC Data'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pcData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"PC Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \" \", item.pcname, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Start Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", item.starttime, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Last Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \" \", item.lasttime, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Total Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", item.totaltime, \"s,\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" School:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \", item.schoolname, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" Lab Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \" \", item.labnum, \",\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \" PC Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \" \", item.pcnum]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Pc, \"qfgvt15XqlteBdHLxWzuMWk2loU=\");\n_c = Pc;\nexport default Pc;\nvar _c;\n$RefreshReg$(_c, \"Pc\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pc","_s","pcData","setPcData","isLoading","setIsLoading","error","setError","baseUrl","process","env","REACT_APP_URL","console","log","fetchData","response","fetch","ok","Error","data","json","message","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","color","map","item","pcname","starttime","lasttime","totaltime","schoolname","labnum","pcnum","_id","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/pc.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Pc() {\r\n  const [pcData, setPcData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const baseUrl = process.env.REACT_APP_URL;\r\n\r\n\r\n  console.log(process.env.REACT_APP_URL); // This should log the base URL\r\n\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n        const response = await fetch(`${baseUrl}/get-pc`);\r\n        if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setPcData(data);\r\n    } catch (error) {\r\n      setError('Failed to fetch data: ' + error.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className='btn btn-' onClick={fetchData} disabled={isLoading}>\r\n        {isLoading ? 'Loading...' : 'Get PC Data'}\r\n      </button>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      <ul>\r\n        {pcData.map(item => (\r\n          <li key={item._id}>\r\n            <strong>PC Name:</strong> {item.pcname}, \r\n            <strong> Start Time:</strong> {item.starttime},\r\n            <strong> Last Time:</strong> {item.lasttime},\r\n            <strong> Total Time:</strong> {item.totaltime}s,\r\n            <strong> School:</strong> {item.schoolname},\r\n            <strong> Lab Number:</strong> {item.labnum},\r\n            <strong> PC Number:</strong> {item.pcnum}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pc;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,EAAEA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMW,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,aAAa;EAGzCC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC,CAAC,CAAC;;EAGxC,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BT,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,OAAQ,SAAQ,CAAC;MACjD,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;QAClB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCjB,SAAS,CAACgB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,QAAQ,CAAC,wBAAwB,GAAGD,KAAK,CAACe,OAAO,CAAC;IACpD;IACAhB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAQwB,SAAS,EAAC,UAAU;MAACC,OAAO,EAAEV,SAAU;MAACW,QAAQ,EAAErB,SAAU;MAAAkB,QAAA,EAClElB,SAAS,GAAG,YAAY,GAAG;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACRvB,KAAK,iBAAIP,OAAA;MAAK+B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAEhB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrD9B,OAAA;MAAAuB,QAAA,EACGpB,MAAM,CAAC8B,GAAG,CAACC,IAAI,iBACdlC,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAAuB,QAAA,EAAQ;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACC,MAAM,EAAC,GACvC,eAAAnC,OAAA;UAAAuB,QAAA,EAAQ;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACE,SAAS,EAAC,GAC9C,eAAApC,OAAA;UAAAuB,QAAA,EAAQ;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACG,QAAQ,EAAC,GAC5C,eAAArC,OAAA;UAAAuB,QAAA,EAAQ;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACI,SAAS,EAAC,IAC9C,eAAAtC,OAAA;UAAAuB,QAAA,EAAQ;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACK,UAAU,EAAC,GAC3C,eAAAvC,OAAA;UAAAuB,QAAA,EAAQ;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACM,MAAM,EAAC,GAC3C,eAAAxC,OAAA;UAAAuB,QAAA,EAAQ;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACI,IAAI,CAACO,KAAK;MAAA,GAPjCP,IAAI,CAACQ,GAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC5B,EAAA,CA/CQD,EAAE;AAAA0C,EAAA,GAAF1C,EAAE;AAiDX,eAAeA,EAAE;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}