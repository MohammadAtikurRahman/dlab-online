{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\uploadvideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadVideo() {\n  _s();\n  const [file, setFile] = useState(null);\n  const handleFileChange = e => {\n    const file = e.target.files[0]; // Assuming the first file is the JSON file\n    setFile(file);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert(\"Please select a JSON file containing video data to upload.\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = async event => {\n      try {\n        const jsonData = JSON.parse(event.target.result);\n        const response = await axios.post('http://localhost:4300/video-info', jsonData, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        alert('Videos uploaded successfully!');\n        console.log(response.data);\n      } catch (error) {\n        alert('Failed to upload videos: ' + (error.response ? error.response.data : error.message));\n        console.error(error);\n      }\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        id: \"inputGroupFile02\",\n        onChange: handleFileChange,\n        accept: \".json\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"button\",\n        onClick: handleUpload,\n        children: \"Upload Video Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadVideo, \"Nkb8eHkBruGouXteoqeZ1R6wRVk=\");\n_c = UploadVideo;\nexport default UploadVideo;\nvar _c;\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadVideo","_s","file","setFile","handleFileChange","e","target","files","handleUpload","alert","reader","FileReader","onload","event","jsonData","JSON","parse","result","response","post","headers","console","log","data","error","message","readAsText","className","children","type","id","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/uploadvideo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UploadVideo() {\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0]; // Assuming the first file is the JSON file\r\n        setFile(file);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            alert(\"Please select a JSON file containing video data to upload.\");\r\n            return;\r\n        }\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = async (event) => {\r\n            try {\r\n                const jsonData = JSON.parse(event.target.result);\r\n                const response = await axios.post('http://localhost:4300/video-info', jsonData, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                });\r\n                alert('Videos uploaded successfully!');\r\n                console.log(response.data);\r\n            } catch (error) {\r\n                alert('Failed to upload videos: ' + (error.response ? error.response.data : error.message));\r\n                console.error(error);\r\n            }\r\n        };\r\n        reader.readAsText(file);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"input-group mb-3\">\r\n                <input type=\"file\" className=\"form-control\" id=\"inputGroupFile02\" onChange={handleFileChange} accept=\".json\" />\r\n                <button className=\"btn btn-primary\" type=\"button\" onClick={handleUpload}>Upload Video Data</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadVideo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMH,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAChCJ,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC;EAED,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACN,IAAI,EAAE;MACPO,KAAK,CAAC,4DAA4D,CAAC;MACnE;IACJ;IAEA,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAOC,KAAK,IAAK;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACP,MAAM,CAACW,MAAM,CAAC;QAChD,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,kCAAkC,EAAEL,QAAQ,EAAE;UAC5EM,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QACFX,KAAK,CAAC,+BAA+B,CAAC;QACtCY,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZf,KAAK,CAAC,2BAA2B,IAAIe,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACK,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC,CAAC;QAC3FJ,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IACDd,MAAM,CAACgB,UAAU,CAACxB,IAAI,CAAC;EAC3B,CAAC;EAED,oBACIH,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC3B7B,OAAA;MAAK4B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7B7B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACF,SAAS,EAAC,cAAc;QAACG,EAAE,EAAC,kBAAkB;QAACC,QAAQ,EAAE3B,gBAAiB;QAAC4B,MAAM,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/GrC,OAAA;QAAQ4B,SAAS,EAAC,iBAAiB;QAACE,IAAI,EAAC,QAAQ;QAACQ,OAAO,EAAE7B,YAAa;QAAAoB,QAAA,EAAC;MAAiB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACnC,EAAA,CAzCQD,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}