{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\allvideodownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllVideoDownload() {\n  _s();\n  const [videoData, setVideoData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(\"http://localhost:4300/get-video\");\n        if (response.ok) {\n          const data = await response.json();\n          setVideoData(data);\n        } else {\n          throw new Error(\"Failed to fetch data.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching video data:\", error);\n        setError(error.message);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  const convertToCSV = useCallback(data => {\n    const headersMap = {\n      title: \"Title\",\n      duration: \"Duration (s)\",\n      uploadDate: \"Upload Date\",\n      views: \"Views\",\n      likes: \"Likes\",\n      comments: \"Comments\"\n    };\n    if (!Array.isArray(data) || data.length === 0) {\n      console.error('Invalid or empty data provided to convertToCSV');\n      return '';\n    }\n    try {\n      const keys = Object.keys(data[0]).filter(key => key in headersMap);\n      const csvHeaders = keys.map(key => headersMap[key]);\n      const csv = data.map(row => {\n        return keys.map(key => `\"${String(row[key]).replace(/\"/g, '\"\"')}\"`).join(',');\n      }).join('\\n');\n      return csvHeaders.join(',') + '\\n' + csv;\n    } catch (error) {\n      console.error('Error converting data to CSV:', error);\n      return '';\n    }\n  }, []);\n  const downloadCSV = () => {\n    const csvData = convertToCSV(videoData);\n    const blob = new Blob([csvData], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\"download\", \"all-video-info.csv\");\n    link.style.visibility = \"hidden\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100\",\n      onClick: downloadCSV,\n      disabled: loading || error || videoData.length === 0,\n      children: loading ? \"Loading...\" : \"Download All Video Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(AllVideoDownload, \"6ca/6QRHxA17r0DOhj2PpQOad8g=\");\n_c = AllVideoDownload;\nexport default AllVideoDownload;\nvar _c;\n$RefreshReg$(_c, \"AllVideoDownload\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AllVideoDownload","_s","videoData","setVideoData","loading","setLoading","error","setError","fetchData","response","fetch","ok","data","json","Error","console","message","convertToCSV","headersMap","title","duration","uploadDate","views","likes","comments","Array","isArray","length","keys","Object","filter","key","csvHeaders","map","csv","row","String","replace","join","downloadCSV","csvData","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","children","className","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/allvideodownload.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\nfunction AllVideoDownload() {\r\n  const [videoData, setVideoData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(\"http://localhost:4300/get-video\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setVideoData(data);\r\n        } else {\r\n          throw new Error(\"Failed to fetch data.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching video data:\", error);\r\n        setError(error.message);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const convertToCSV = useCallback((data) => {\r\n    const headersMap = {\r\n      title: \"Title\",\r\n      duration: \"Duration (s)\",\r\n      uploadDate: \"Upload Date\",\r\n      views: \"Views\",\r\n      likes: \"Likes\",\r\n      comments: \"Comments\"\r\n    };\r\n\r\n    if (!Array.isArray(data) || data.length === 0) {\r\n      console.error('Invalid or empty data provided to convertToCSV');\r\n      return '';\r\n    }\r\n    \r\n    try {\r\n      const keys = Object.keys(data[0]).filter(key => key in headersMap);\r\n      const csvHeaders = keys.map(key => headersMap[key]);\r\n      const csv = data.map(row => {\r\n        return keys.map(key => `\"${String(row[key]).replace(/\"/g, '\"\"')}\"`).join(',');\r\n      }).join('\\n');\r\n      \r\n      return csvHeaders.join(',') + '\\n' + csv;\r\n    } catch (error) {\r\n      console.error('Error converting data to CSV:', error);\r\n      return '';\r\n    }\r\n  }, []);\r\n\r\n  const downloadCSV = () => {\r\n    const csvData = convertToCSV(videoData);\r\n    const blob = new Blob([csvData], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"all-video-info.csv\");\r\n    link.style.visibility = \"hidden\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"btn btn-primary w-100\" onClick={downloadCSV} disabled={loading || error || videoData.length === 0}>\r\n        {loading ? \"Loading...\" : \"Download All Video Info\"}\r\n      </button>\r\n      {error && <p className=\"text-danger\">Error: {error}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllVideoDownload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}