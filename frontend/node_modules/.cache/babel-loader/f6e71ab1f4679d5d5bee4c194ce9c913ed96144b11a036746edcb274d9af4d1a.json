{"ast":null,"code":"var _jsxFileName = \"D:\\\\MONGODB-online\\\\frontend\\\\src\\\\allschooldownload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllSchoolDownload() {\n  _s();\n  const [schoolData, setSchoolData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4300/get-pc\");\n        if (response.ok) {\n          const data = await response.json();\n          setSchoolData(data);\n        } else {\n          throw new Error(\"Network response was not ok.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  function convertToCSV(data) {\n    if (!data) {\n      console.error('convertToCSV was called with null or undefined data');\n      return '';\n    }\n    try {\n      const keys = Object.keys(data[0]);\n      const csv = data.map(row => keys.map(key => row[key]).join(',')).join('\\n');\n      return keys.join(',') + '\\n' + csv;\n    } catch (error) {\n      console.error('Error converting data to CSV:', error);\n      return '';\n    }\n  }\n  const downloadCSV = () => {\n    const csvData = convertToCSV(schoolData);\n    const blob = new Blob([csvData], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\"download\", \"all-school-info.csv\");\n    link.style.visibility = \"hidden\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-danger w-100\",\n    onClick: downloadCSV,\n    children: \"Download All Schools Info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(AllSchoolDownload, \"FzrSos/hRUMB+CbLkP/jIRZo45g=\");\n_c = AllSchoolDownload;\nexport default AllSchoolDownload;\nvar _c;\n$RefreshReg$(_c, \"AllSchoolDownload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AllSchoolDownload","_s","schoolData","setSchoolData","fetchData","response","fetch","ok","data","json","Error","error","console","convertToCSV","keys","Object","csv","map","row","key","join","downloadCSV","csvData","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MONGODB-online/frontend/src/allschooldownload.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction AllSchoolDownload() {\r\n  const [schoolData, setSchoolData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4300/get-pc\");\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setSchoolData(data);\r\n        } else {\r\n          throw new Error(\"Network response was not ok.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  function convertToCSV(data) {\r\n    if (!data) {\r\n        console.error('convertToCSV was called with null or undefined data');\r\n        return '';\r\n    }\r\n    try {\r\n        const keys = Object.keys(data[0]);\r\n        const csv = data.map(row => keys.map(key => row[key]).join(',')).join('\\n');\r\n        return keys.join(',') + '\\n' + csv;\r\n    } catch (error) {\r\n        console.error('Error converting data to CSV:', error);\r\n        return '';\r\n    }\r\n}\r\n\r\n\r\n  const downloadCSV = () => {\r\n    const csvData = convertToCSV(schoolData);\r\n    const blob = new Blob([csvData], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"all-school-info.csv\");\r\n    link.style.visibility = \"hidden\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <button className=\"btn btn-danger w-100\" onClick={downloadCSV}>\r\n      Download All Schools Info\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AllSchoolDownload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAC5D,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCN,aAAa,CAACK,IAAI,CAAC;QACrB,CAAC,MAAM;UACL,MAAM,IAAIE,KAAK,CAAC,8BAA8B,CAAC;QACjD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,SAASS,YAAYA,CAACL,IAAI,EAAE;IAC1B,IAAI,CAACA,IAAI,EAAE;MACPI,OAAO,CAACD,KAAK,CAAC,qDAAqD,CAAC;MACpE,OAAO,EAAE;IACb;IACA,IAAI;MACA,MAAMG,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACN,IAAI,CAAC,CAAC,CAAC,CAAC;MACjC,MAAMQ,GAAG,GAAGR,IAAI,CAACS,GAAG,CAACC,GAAG,IAAIJ,IAAI,CAACG,GAAG,CAACE,GAAG,IAAID,GAAG,CAACC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;MAC3E,OAAON,IAAI,CAACM,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAGJ,GAAG;IACtC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAO,EAAE;IACb;EACJ;EAGE,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAGT,YAAY,CAACX,UAAU,CAAC;IACxC,MAAMqB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,OAAO,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA0B,CAAC,CAAC;IACrE,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IACrC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxCF,IAAI,CAACG,YAAY,CAAC,MAAM,EAAEN,GAAG,CAAC;IAC9BG,IAAI,CAACG,YAAY,CAAC,UAAU,EAAE,qBAAqB,CAAC;IACpDH,IAAI,CAACI,KAAK,CAACC,UAAU,GAAG,QAAQ;IAChCJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,IAAI,CAAC;IAC/BA,IAAI,CAACQ,KAAK,CAAC,CAAC;IACZP,QAAQ,CAACK,IAAI,CAACG,WAAW,CAACT,IAAI,CAAC;EACjC,CAAC;EAED,oBACE9B,OAAA;IAAQwC,SAAS,EAAC,sBAAsB;IAACC,OAAO,EAAEnB,WAAY;IAAAoB,QAAA,EAAC;EAE/D;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAAC5C,EAAA,CAvDQD,iBAAiB;AAAA8C,EAAA,GAAjB9C,iBAAiB;AAyD1B,eAAeA,iBAAiB;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}